<launch>
    <!-- <arg name="model" default="$(env TwoMODEL)" doc="model type [burger, waffle, waffle_pi]" /> -->
    <arg name="first_agv" default="agv_0" />
    <arg name="second_agv" default="agv_1" />

    <arg name="first_agv_x_pos" default="0.0" />
    <arg name="first_agv_y_pos" default="0.0" />
    <arg name="first_agv_z_pos" default=" 0.0" />
    <arg name="first_agv_yaw" default=" 0.0" />

    <arg name="second_agv_x_pos" default=" 2.0" />
    <arg name="second_agv_y_pos" default="-1.0" />
    <arg name="second_agv_z_pos" default=" 0.0" />
    <arg name="second_agv_yaw" default=" 0.0" />
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find carmodel)/world/box_house.world" />
        <arg name="paused" value="false" />
        <arg name="use_sim_time" value="true" />
        <arg name="gui" value="true" />
        <arg name="headless" value="false" />
        <arg name="debug" value="false" />
    </include>
    <group ns="$(arg first_agv)">
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"
            output="screen">
            <param name="publish_frequency" type="double" value="50.0" />
            <!-- <param name="tf_prefix" value="$(arg first_agv)" /> -->
        </node>
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        </node>
        <param name="robot_description"
            command="$(find xacro)/xacro --inorder $(find carmodel)/xacro/$(arg second_agv)/carassmble.xacro ns:=$(arg first_agv)" />
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
            args="-urdf -model $(arg first_agv) -x $(arg first_agv_x_pos) -y $(arg first_agv_y_pos) -z $(arg first_agv_z_pos) -Y $(arg first_agv_yaw) -param robot_description" />
        <!-- 切换gmapping建图 -->
        <include file="$($(find my_assamble_pkg)/launch/multi_gmapping.launch">
            <arg name="ns" value="$(arg first_agv)" />
        </include>
        <node name="rviz" pkg="rviz" type="rviz"
            args="-d $(find carmodel)/config/multimodel0.rviz" />
        <!-- movebase路径规划 -->
        <include file="$(find my_assamble_pkg)/launch/my_multi_navigation.launch">
            <arg name="ns" value="$(arg first_agv)" />
            <arg name="map_ns" value="$(arg first_agv)" />
        </include>
        <node pkg="multi_agv_sim" type="tf_listener" name="tf_listener" output="screen">
            <param name="num" value="2"></param>
        </node>
    </group>
    <group ns="$(arg second_agv)">
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="50.0" />
            <!-- <param name="tf_prefix" value="$(arg second_agv)" /> -->
        </node>
        <param name="robot_description"
            command="$(find xacro)/xacro --inorder $(find carmodel)/xacro/$(arg second_agv)/carassmble.xacro ns:=$(arg second_agv)" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        </node>
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
            args="-urdf -model $(arg second_agv) -x $(arg second_agv_x_pos) -y $(arg second_agv_y_pos) -z $(arg second_agv_z_pos) -Y $(arg second_agv_yaw) -param robot_description" />
        <!-- 切换gmapping建图 -->
        <include file="$$(find my_assamble_pkg)/launch/multi_gmapping.launch">
            <arg name="ns" value="$(arg second_agv)" />
        </include>
        <!-- <node name="rviz" pkg="rviz" type="rviz"
            args="-d $(find carmodel)/config/multimodel1.rviz" /> -->
        <!-- movebase路径规划 -->
        <include file="$(find my_assamble_pkg)/launch/my_multi_navigation.launch">
            <arg name="ns" value="$(arg second_agv)" />
            <arg name="map_ns" value="$(arg second_agv)" />
        </include>
        <node pkg="multi_agv_sim" type="tf_listener" name="tf_listener" output="screen">
            <param name="num" value="2"></param>
        </node>
    </group>

    <node pkg="multi_agv_sim" type="ass_agv_pos" name="ass_agv_pos" output="screen">
        <param name="num" value="2"></param>
    </node>
    <node pkg="multi_agv_sim" type="cal_center" name="cal_center" output="screen">
        <param name="num" value="2"></param>
    </node>
    <include file="$(find multi_agv_sim)/launch/center_nav.launch">
    </include>
    <!-- <include file="$(find my_assamble_pkg)/launch/my_multi_navigation.launch">
        <arg name="ns" value="agv_ass" />
        <arg name="map_ns" value="agv_0" />
    </include> -->
    <!-- <node pkg="tf" type="static_transform_publisher"
        name="agv1_agv0"
        args="0 0 0 0 0 0 agv_0/map agv_1/odom 100" /> -->
    <!-- 多地图合并-->
    <include file="$(find multi_agv_sim)/launch/multi_maps_merge.launch"></include>
</launch>